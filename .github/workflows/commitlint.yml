# Commit Message Linter
#
# This workflow validates that PR titles and commit messages follow Conventional Commits format.
# Uses reusable workflow from hope0hermes/SharedWorkflows for consistent CI/CD across projects.
# It will FAIL the check if messages don't follow the format, preventing merge.
#
# Conventional Commit Format:
# <type>(<scope>): <description>
#
# Valid types: feat, fix, docs, style, refactor, perf, test, chore, ci, build
# Examples:
# - feat: add activity stream batching
# - fix: correct rate limit handling
# - docs: update README
# - chore: update dependencies
#
# To enable enforcement:
# In GitHub, enable branch protection on main:
# Settings → Branches → Add rule for main
# Check "Require status checks to pass"
# Select "Lint Commit Messages"

name: Lint Commit Messages

on:
  push:
    branches:
      - 'release/**'  # Trigger on version bump branches
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened, edited ]

jobs:
  commitlint:
    uses: hope0hermes/SharedWorkflows/.github/workflows/reusable-commitlint.yml@main
